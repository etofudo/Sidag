#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AULLMS")]
public partial class LmsDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBook(Book instance);
  partial void UpdateBook(Book instance);
  partial void DeleteBook(Book instance);
  partial void InsertBookCategory(BookCategory instance);
  partial void UpdateBookCategory(BookCategory instance);
  partial void DeleteBookCategory(BookCategory instance);
  partial void InsertBookPurchase(BookPurchase instance);
  partial void UpdateBookPurchase(BookPurchase instance);
  partial void DeleteBookPurchase(BookPurchase instance);
  partial void InsertBookRequest(BookRequest instance);
  partial void UpdateBookRequest(BookRequest instance);
  partial void DeleteBookRequest(BookRequest instance);
  partial void InsertBookReturn(BookReturn instance);
  partial void UpdateBookReturn(BookReturn instance);
  partial void DeleteBookReturn(BookReturn instance);
  partial void InsertBookShelf(BookShelf instance);
  partial void UpdateBookShelf(BookShelf instance);
  partial void DeleteBookShelf(BookShelf instance);
  partial void InsertBookVendor(BookVendor instance);
  partial void UpdateBookVendor(BookVendor instance);
  partial void DeleteBookVendor(BookVendor instance);
  partial void InsertDepartment(Department instance);
  partial void UpdateDepartment(Department instance);
  partial void DeleteDepartment(Department instance);
  partial void InsertItemCategory(ItemCategory instance);
  partial void UpdateItemCategory(ItemCategory instance);
  partial void DeleteItemCategory(ItemCategory instance);
  partial void InsertLibrary(Library instance);
  partial void UpdateLibrary(Library instance);
  partial void DeleteLibrary(Library instance);
  partial void InsertLibraryNew(LibraryNew instance);
  partial void UpdateLibraryNew(LibraryNew instance);
  partial void DeleteLibraryNew(LibraryNew instance);
  partial void InsertLibraryStudentClerance(LibraryStudentClerance instance);
  partial void UpdateLibraryStudentClerance(LibraryStudentClerance instance);
  partial void DeleteLibraryStudentClerance(LibraryStudentClerance instance);
  partial void InsertLoanBook(LoanBook instance);
  partial void UpdateLoanBook(LoanBook instance);
  partial void DeleteLoanBook(LoanBook instance);
  partial void InsertLoanPenalty(LoanPenalty instance);
  partial void UpdateLoanPenalty(LoanPenalty instance);
  partial void DeleteLoanPenalty(LoanPenalty instance);
  partial void InsertOtherItem(OtherItem instance);
  partial void UpdateOtherItem(OtherItem instance);
  partial void DeleteOtherItem(OtherItem instance);
  partial void InsertOtherItemsPurchase(OtherItemsPurchase instance);
  partial void UpdateOtherItemsPurchase(OtherItemsPurchase instance);
  partial void DeleteOtherItemsPurchase(OtherItemsPurchase instance);
  partial void InsertPublication(Publication instance);
  partial void UpdatePublication(Publication instance);
  partial void DeletePublication(Publication instance);
  partial void InsertRole(Role instance);
  partial void UpdateRole(Role instance);
  partial void DeleteRole(Role instance);
  partial void InsertSendMessage(SendMessage instance);
  partial void UpdateSendMessage(SendMessage instance);
  partial void DeleteSendMessage(SendMessage instance);
  partial void InsertShelfCategory(ShelfCategory instance);
  partial void UpdateShelfCategory(ShelfCategory instance);
  partial void DeleteShelfCategory(ShelfCategory instance);
  partial void InsertStudentProjectTopic(StudentProjectTopic instance);
  partial void UpdateStudentProjectTopic(StudentProjectTopic instance);
  partial void DeleteStudentProjectTopic(StudentProjectTopic instance);
  partial void Insertusercategory(usercategory instance);
  partial void Updateusercategory(usercategory instance);
  partial void Deleteusercategory(usercategory instance);
  partial void InsertPastQuestion(PastQuestion instance);
  partial void UpdatePastQuestion(PastQuestion instance);
  partial void DeletePastQuestion(PastQuestion instance);
  partial void InsertLibUser(LibUser instance);
  partial void UpdateLibUser(LibUser instance);
  partial void DeleteLibUser(LibUser instance);
  #endregion
	
	public LmsDataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AULLMSConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public LmsDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LmsDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LmsDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LmsDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Book> Books
	{
		get
		{
			return this.GetTable<Book>();
		}
	}
	
	public System.Data.Linq.Table<BookCategory> BookCategories
	{
		get
		{
			return this.GetTable<BookCategory>();
		}
	}
	
	public System.Data.Linq.Table<BookPurchase> BookPurchases
	{
		get
		{
			return this.GetTable<BookPurchase>();
		}
	}
	
	public System.Data.Linq.Table<BookRequest> BookRequests
	{
		get
		{
			return this.GetTable<BookRequest>();
		}
	}
	
	public System.Data.Linq.Table<BookReturn> BookReturns
	{
		get
		{
			return this.GetTable<BookReturn>();
		}
	}
	
	public System.Data.Linq.Table<BookShelf> BookShelfs
	{
		get
		{
			return this.GetTable<BookShelf>();
		}
	}
	
	public System.Data.Linq.Table<BookVendor> BookVendors
	{
		get
		{
			return this.GetTable<BookVendor>();
		}
	}
	
	public System.Data.Linq.Table<Department> Departments
	{
		get
		{
			return this.GetTable<Department>();
		}
	}
	
	public System.Data.Linq.Table<ItemCategory> ItemCategories
	{
		get
		{
			return this.GetTable<ItemCategory>();
		}
	}
	
	public System.Data.Linq.Table<Library> Libraries
	{
		get
		{
			return this.GetTable<Library>();
		}
	}
	
	public System.Data.Linq.Table<LibraryNew> LibraryNews
	{
		get
		{
			return this.GetTable<LibraryNew>();
		}
	}
	
	public System.Data.Linq.Table<LibraryStudentClerance> LibraryStudentClerances
	{
		get
		{
			return this.GetTable<LibraryStudentClerance>();
		}
	}
	
	public System.Data.Linq.Table<LoanBook> LoanBooks
	{
		get
		{
			return this.GetTable<LoanBook>();
		}
	}
	
	public System.Data.Linq.Table<LoanPenalty> LoanPenalties
	{
		get
		{
			return this.GetTable<LoanPenalty>();
		}
	}
	
	public System.Data.Linq.Table<OtherItem> OtherItems
	{
		get
		{
			return this.GetTable<OtherItem>();
		}
	}
	
	public System.Data.Linq.Table<OtherItemsPurchase> OtherItemsPurchases
	{
		get
		{
			return this.GetTable<OtherItemsPurchase>();
		}
	}
	
	public System.Data.Linq.Table<Publication> Publications
	{
		get
		{
			return this.GetTable<Publication>();
		}
	}
	
	public System.Data.Linq.Table<Role> Roles
	{
		get
		{
			return this.GetTable<Role>();
		}
	}
	
	public System.Data.Linq.Table<SendMessage> SendMessages
	{
		get
		{
			return this.GetTable<SendMessage>();
		}
	}
	
	public System.Data.Linq.Table<ShelfCategory> ShelfCategories
	{
		get
		{
			return this.GetTable<ShelfCategory>();
		}
	}
	
	public System.Data.Linq.Table<StudentProjectTopic> StudentProjectTopics
	{
		get
		{
			return this.GetTable<StudentProjectTopic>();
		}
	}
	
	public System.Data.Linq.Table<usercategory> usercategories
	{
		get
		{
			return this.GetTable<usercategory>();
		}
	}
	
	public System.Data.Linq.Table<PastQuestion> PastQuestions
	{
		get
		{
			return this.GetTable<PastQuestion>();
		}
	}
	
	public System.Data.Linq.Table<LibUser> LibUsers
	{
		get
		{
			return this.GetTable<LibUser>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookID;
	
	private System.Nullable<int> _BookCategoryID;
	
	private string _ISBN;
	
	private string _Author;
	
	private string _BookName;
	
	private string _Edition;
	
	private string _Publisher;
	
	private string _YearPublished;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<BookPurchase> _BookPurchases;
	
	private EntitySet<BookRequest> _BookRequests;
	
	private EntitySet<BookReturn> _BookReturns;
	
	private EntitySet<BookVendor> _BookVendors;
	
	private EntitySet<LoanBook> _LoanBooks;
	
	private EntityRef<BookCategory> _BookCategory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIDChanging(int value);
    partial void OnBookIDChanged();
    partial void OnBookCategoryIDChanging(System.Nullable<int> value);
    partial void OnBookCategoryIDChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnBookNameChanging(string value);
    partial void OnBookNameChanged();
    partial void OnEditionChanging(string value);
    partial void OnEditionChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnYearPublishedChanging(string value);
    partial void OnYearPublishedChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public Book()
	{
		this._BookPurchases = new EntitySet<BookPurchase>(new Action<BookPurchase>(this.attach_BookPurchases), new Action<BookPurchase>(this.detach_BookPurchases));
		this._BookRequests = new EntitySet<BookRequest>(new Action<BookRequest>(this.attach_BookRequests), new Action<BookRequest>(this.detach_BookRequests));
		this._BookReturns = new EntitySet<BookReturn>(new Action<BookReturn>(this.attach_BookReturns), new Action<BookReturn>(this.detach_BookReturns));
		this._BookVendors = new EntitySet<BookVendor>(new Action<BookVendor>(this.attach_BookVendors), new Action<BookVendor>(this.detach_BookVendors));
		this._LoanBooks = new EntitySet<LoanBook>(new Action<LoanBook>(this.attach_LoanBooks), new Action<LoanBook>(this.detach_LoanBooks));
		this._BookCategory = default(EntityRef<BookCategory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCategoryID", DbType="Int")]
	public System.Nullable<int> BookCategoryID
	{
		get
		{
			return this._BookCategoryID;
		}
		set
		{
			if ((this._BookCategoryID != value))
			{
				if (this._BookCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._BookCategoryID = value;
				this.SendPropertyChanged("BookCategoryID");
				this.OnBookCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(100)")]
	public string ISBN
	{
		get
		{
			return this._ISBN;
		}
		set
		{
			if ((this._ISBN != value))
			{
				this.OnISBNChanging(value);
				this.SendPropertyChanging();
				this._ISBN = value;
				this.SendPropertyChanged("ISBN");
				this.OnISBNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(50)")]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="VarChar(50)")]
	public string BookName
	{
		get
		{
			return this._BookName;
		}
		set
		{
			if ((this._BookName != value))
			{
				this.OnBookNameChanging(value);
				this.SendPropertyChanging();
				this._BookName = value;
				this.SendPropertyChanged("BookName");
				this.OnBookNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edition", DbType="VarChar(100)")]
	public string Edition
	{
		get
		{
			return this._Edition;
		}
		set
		{
			if ((this._Edition != value))
			{
				this.OnEditionChanging(value);
				this.SendPropertyChanging();
				this._Edition = value;
				this.SendPropertyChanged("Edition");
				this.OnEditionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="VarChar(100)")]
	public string Publisher
	{
		get
		{
			return this._Publisher;
		}
		set
		{
			if ((this._Publisher != value))
			{
				this.OnPublisherChanging(value);
				this.SendPropertyChanging();
				this._Publisher = value;
				this.SendPropertyChanged("Publisher");
				this.OnPublisherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPublished", DbType="VarChar(50)")]
	public string YearPublished
	{
		get
		{
			return this._YearPublished;
		}
		set
		{
			if ((this._YearPublished != value))
			{
				this.OnYearPublishedChanging(value);
				this.SendPropertyChanging();
				this._YearPublished = value;
				this.SendPropertyChanged("YearPublished");
				this.OnYearPublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookPurchase", Storage="_BookPurchases", ThisKey="BookID", OtherKey="BookID")]
	public EntitySet<BookPurchase> BookPurchases
	{
		get
		{
			return this._BookPurchases;
		}
		set
		{
			this._BookPurchases.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookRequest", Storage="_BookRequests", ThisKey="BookID", OtherKey="BookID")]
	public EntitySet<BookRequest> BookRequests
	{
		get
		{
			return this._BookRequests;
		}
		set
		{
			this._BookRequests.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookReturn", Storage="_BookReturns", ThisKey="BookID", OtherKey="BookID")]
	public EntitySet<BookReturn> BookReturns
	{
		get
		{
			return this._BookReturns;
		}
		set
		{
			this._BookReturns.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookVendor", Storage="_BookVendors", ThisKey="BookID", OtherKey="BookID")]
	public EntitySet<BookVendor> BookVendors
	{
		get
		{
			return this._BookVendors;
		}
		set
		{
			this._BookVendors.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_LoanBook", Storage="_LoanBooks", ThisKey="BookID", OtherKey="BookID")]
	public EntitySet<LoanBook> LoanBooks
	{
		get
		{
			return this._LoanBooks;
		}
		set
		{
			this._LoanBooks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_Book", Storage="_BookCategory", ThisKey="BookCategoryID", OtherKey="BookCategoryID", IsForeignKey=true)]
	public BookCategory BookCategory
	{
		get
		{
			return this._BookCategory.Entity;
		}
		set
		{
			BookCategory previousValue = this._BookCategory.Entity;
			if (((previousValue != value) 
						|| (this._BookCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookCategory.Entity = null;
					previousValue.Books.Remove(this);
				}
				this._BookCategory.Entity = value;
				if ((value != null))
				{
					value.Books.Add(this);
					this._BookCategoryID = value.BookCategoryID;
				}
				else
				{
					this._BookCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("BookCategory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookPurchases(BookPurchase entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_BookPurchases(BookPurchase entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
	
	private void attach_BookRequests(BookRequest entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_BookRequests(BookRequest entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
	
	private void attach_BookReturns(BookReturn entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_BookReturns(BookReturn entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
	
	private void attach_BookVendors(BookVendor entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_BookVendors(BookVendor entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
	
	private void attach_LoanBooks(LoanBook entity)
	{
		this.SendPropertyChanging();
		entity.Book = this;
	}
	
	private void detach_LoanBooks(LoanBook entity)
	{
		this.SendPropertyChanging();
		entity.Book = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookCategory")]
public partial class BookCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookCategoryID;
	
	private string _BookCategoryDescription;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<Book> _Books;
	
	private EntitySet<BookPurchase> _BookPurchases;
	
	private EntitySet<BookRequest> _BookRequests;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookCategoryIDChanging(int value);
    partial void OnBookCategoryIDChanged();
    partial void OnBookCategoryDescriptionChanging(string value);
    partial void OnBookCategoryDescriptionChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public BookCategory()
	{
		this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
		this._BookPurchases = new EntitySet<BookPurchase>(new Action<BookPurchase>(this.attach_BookPurchases), new Action<BookPurchase>(this.detach_BookPurchases));
		this._BookRequests = new EntitySet<BookRequest>(new Action<BookRequest>(this.attach_BookRequests), new Action<BookRequest>(this.detach_BookRequests));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookCategoryID
	{
		get
		{
			return this._BookCategoryID;
		}
		set
		{
			if ((this._BookCategoryID != value))
			{
				this.OnBookCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._BookCategoryID = value;
				this.SendPropertyChanged("BookCategoryID");
				this.OnBookCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCategoryDescription", DbType="VarChar(100)")]
	public string BookCategoryDescription
	{
		get
		{
			return this._BookCategoryDescription;
		}
		set
		{
			if ((this._BookCategoryDescription != value))
			{
				this.OnBookCategoryDescriptionChanging(value);
				this.SendPropertyChanging();
				this._BookCategoryDescription = value;
				this.SendPropertyChanged("BookCategoryDescription");
				this.OnBookCategoryDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_Book", Storage="_Books", ThisKey="BookCategoryID", OtherKey="BookCategoryID")]
	public EntitySet<Book> Books
	{
		get
		{
			return this._Books;
		}
		set
		{
			this._Books.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookPurchase", Storage="_BookPurchases", ThisKey="BookCategoryID", OtherKey="BookCategoryID")]
	public EntitySet<BookPurchase> BookPurchases
	{
		get
		{
			return this._BookPurchases;
		}
		set
		{
			this._BookPurchases.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookRequest", Storage="_BookRequests", ThisKey="BookCategoryID", OtherKey="BookCategoryID")]
	public EntitySet<BookRequest> BookRequests
	{
		get
		{
			return this._BookRequests;
		}
		set
		{
			this._BookRequests.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Books(Book entity)
	{
		this.SendPropertyChanging();
		entity.BookCategory = this;
	}
	
	private void detach_Books(Book entity)
	{
		this.SendPropertyChanging();
		entity.BookCategory = null;
	}
	
	private void attach_BookPurchases(BookPurchase entity)
	{
		this.SendPropertyChanging();
		entity.BookCategory = this;
	}
	
	private void detach_BookPurchases(BookPurchase entity)
	{
		this.SendPropertyChanging();
		entity.BookCategory = null;
	}
	
	private void attach_BookRequests(BookRequest entity)
	{
		this.SendPropertyChanging();
		entity.BookCategory = this;
	}
	
	private void detach_BookRequests(BookRequest entity)
	{
		this.SendPropertyChanging();
		entity.BookCategory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookPurchase")]
public partial class BookPurchase : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookPurchaseID;
	
	private System.Nullable<int> _BookID;
	
	private System.Nullable<int> _BookCategoryID;
	
	private System.Nullable<int> _BookPrice;
	
	private System.Nullable<int> _BookPricePaid;
	
	private System.Nullable<int> _BookPriceLeft;
	
	private System.Nullable<int> _NoOfBookPurchased;
	
	private System.Nullable<int> _BookVendorID;
	
	private string _YearPublished;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntityRef<BookCategory> _BookCategory;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<BookVendor> _BookVendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookPurchaseIDChanging(int value);
    partial void OnBookPurchaseIDChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnBookCategoryIDChanging(System.Nullable<int> value);
    partial void OnBookCategoryIDChanged();
    partial void OnBookPriceChanging(System.Nullable<int> value);
    partial void OnBookPriceChanged();
    partial void OnBookPricePaidChanging(System.Nullable<int> value);
    partial void OnBookPricePaidChanged();
    partial void OnBookPriceLeftChanging(System.Nullable<int> value);
    partial void OnBookPriceLeftChanged();
    partial void OnNoOfBookPurchasedChanging(System.Nullable<int> value);
    partial void OnNoOfBookPurchasedChanged();
    partial void OnBookVendorIDChanging(System.Nullable<int> value);
    partial void OnBookVendorIDChanged();
    partial void OnYearPublishedChanging(string value);
    partial void OnYearPublishedChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public BookPurchase()
	{
		this._BookCategory = default(EntityRef<BookCategory>);
		this._Book = default(EntityRef<Book>);
		this._BookVendor = default(EntityRef<BookVendor>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPurchaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookPurchaseID
	{
		get
		{
			return this._BookPurchaseID;
		}
		set
		{
			if ((this._BookPurchaseID != value))
			{
				this.OnBookPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._BookPurchaseID = value;
				this.SendPropertyChanged("BookPurchaseID");
				this.OnBookPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
	public System.Nullable<int> BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCategoryID", DbType="Int")]
	public System.Nullable<int> BookCategoryID
	{
		get
		{
			return this._BookCategoryID;
		}
		set
		{
			if ((this._BookCategoryID != value))
			{
				if (this._BookCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._BookCategoryID = value;
				this.SendPropertyChanged("BookCategoryID");
				this.OnBookCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPrice", DbType="Int")]
	public System.Nullable<int> BookPrice
	{
		get
		{
			return this._BookPrice;
		}
		set
		{
			if ((this._BookPrice != value))
			{
				this.OnBookPriceChanging(value);
				this.SendPropertyChanging();
				this._BookPrice = value;
				this.SendPropertyChanged("BookPrice");
				this.OnBookPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPricePaid", DbType="Int")]
	public System.Nullable<int> BookPricePaid
	{
		get
		{
			return this._BookPricePaid;
		}
		set
		{
			if ((this._BookPricePaid != value))
			{
				this.OnBookPricePaidChanging(value);
				this.SendPropertyChanging();
				this._BookPricePaid = value;
				this.SendPropertyChanged("BookPricePaid");
				this.OnBookPricePaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPriceLeft", DbType="Int")]
	public System.Nullable<int> BookPriceLeft
	{
		get
		{
			return this._BookPriceLeft;
		}
		set
		{
			if ((this._BookPriceLeft != value))
			{
				this.OnBookPriceLeftChanging(value);
				this.SendPropertyChanging();
				this._BookPriceLeft = value;
				this.SendPropertyChanged("BookPriceLeft");
				this.OnBookPriceLeftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBookPurchased", DbType="Int")]
	public System.Nullable<int> NoOfBookPurchased
	{
		get
		{
			return this._NoOfBookPurchased;
		}
		set
		{
			if ((this._NoOfBookPurchased != value))
			{
				this.OnNoOfBookPurchasedChanging(value);
				this.SendPropertyChanging();
				this._NoOfBookPurchased = value;
				this.SendPropertyChanged("NoOfBookPurchased");
				this.OnNoOfBookPurchasedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookVendorID", DbType="Int")]
	public System.Nullable<int> BookVendorID
	{
		get
		{
			return this._BookVendorID;
		}
		set
		{
			if ((this._BookVendorID != value))
			{
				if (this._BookVendor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookVendorIDChanging(value);
				this.SendPropertyChanging();
				this._BookVendorID = value;
				this.SendPropertyChanged("BookVendorID");
				this.OnBookVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPublished", DbType="VarChar(50)")]
	public string YearPublished
	{
		get
		{
			return this._YearPublished;
		}
		set
		{
			if ((this._YearPublished != value))
			{
				this.OnYearPublishedChanging(value);
				this.SendPropertyChanging();
				this._YearPublished = value;
				this.SendPropertyChanged("YearPublished");
				this.OnYearPublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookPurchase", Storage="_BookCategory", ThisKey="BookCategoryID", OtherKey="BookCategoryID", IsForeignKey=true)]
	public BookCategory BookCategory
	{
		get
		{
			return this._BookCategory.Entity;
		}
		set
		{
			BookCategory previousValue = this._BookCategory.Entity;
			if (((previousValue != value) 
						|| (this._BookCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookCategory.Entity = null;
					previousValue.BookPurchases.Remove(this);
				}
				this._BookCategory.Entity = value;
				if ((value != null))
				{
					value.BookPurchases.Add(this);
					this._BookCategoryID = value.BookCategoryID;
				}
				else
				{
					this._BookCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("BookCategory");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookPurchase", Storage="_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.BookPurchases.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.BookPurchases.Add(this);
					this._BookID = value.BookID;
				}
				else
				{
					this._BookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookVendor_BookPurchase", Storage="_BookVendor", ThisKey="BookVendorID", OtherKey="BookVendorID", IsForeignKey=true)]
	public BookVendor BookVendor
	{
		get
		{
			return this._BookVendor.Entity;
		}
		set
		{
			BookVendor previousValue = this._BookVendor.Entity;
			if (((previousValue != value) 
						|| (this._BookVendor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookVendor.Entity = null;
					previousValue.BookPurchases.Remove(this);
				}
				this._BookVendor.Entity = value;
				if ((value != null))
				{
					value.BookPurchases.Add(this);
					this._BookVendorID = value.BookVendorID;
				}
				else
				{
					this._BookVendorID = default(Nullable<int>);
				}
				this.SendPropertyChanged("BookVendor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookRequest")]
public partial class BookRequest : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookRequestID;
	
	private System.Nullable<int> _BookID;
	
	private System.Nullable<int> _BookCategoryID;
	
	private string _BookRequestType;
	
	private string _BookRequestDate;
	
	private System.Nullable<int> _NoOfBookRequest;
	
	private string _Email;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntityRef<BookCategory> _BookCategory;
	
	private EntityRef<Book> _Book;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookRequestIDChanging(int value);
    partial void OnBookRequestIDChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnBookCategoryIDChanging(System.Nullable<int> value);
    partial void OnBookCategoryIDChanged();
    partial void OnBookRequestTypeChanging(string value);
    partial void OnBookRequestTypeChanged();
    partial void OnBookRequestDateChanging(string value);
    partial void OnBookRequestDateChanged();
    partial void OnNoOfBookRequestChanging(System.Nullable<int> value);
    partial void OnNoOfBookRequestChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public BookRequest()
	{
		this._BookCategory = default(EntityRef<BookCategory>);
		this._Book = default(EntityRef<Book>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookRequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookRequestID
	{
		get
		{
			return this._BookRequestID;
		}
		set
		{
			if ((this._BookRequestID != value))
			{
				this.OnBookRequestIDChanging(value);
				this.SendPropertyChanging();
				this._BookRequestID = value;
				this.SendPropertyChanged("BookRequestID");
				this.OnBookRequestIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
	public System.Nullable<int> BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCategoryID", DbType="Int")]
	public System.Nullable<int> BookCategoryID
	{
		get
		{
			return this._BookCategoryID;
		}
		set
		{
			if ((this._BookCategoryID != value))
			{
				if (this._BookCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._BookCategoryID = value;
				this.SendPropertyChanged("BookCategoryID");
				this.OnBookCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookRequestType", DbType="VarChar(100)")]
	public string BookRequestType
	{
		get
		{
			return this._BookRequestType;
		}
		set
		{
			if ((this._BookRequestType != value))
			{
				this.OnBookRequestTypeChanging(value);
				this.SendPropertyChanging();
				this._BookRequestType = value;
				this.SendPropertyChanged("BookRequestType");
				this.OnBookRequestTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookRequestDate", DbType="VarChar(50)")]
	public string BookRequestDate
	{
		get
		{
			return this._BookRequestDate;
		}
		set
		{
			if ((this._BookRequestDate != value))
			{
				this.OnBookRequestDateChanging(value);
				this.SendPropertyChanging();
				this._BookRequestDate = value;
				this.SendPropertyChanged("BookRequestDate");
				this.OnBookRequestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBookRequest", DbType="Int")]
	public System.Nullable<int> NoOfBookRequest
	{
		get
		{
			return this._NoOfBookRequest;
		}
		set
		{
			if ((this._NoOfBookRequest != value))
			{
				this.OnNoOfBookRequestChanging(value);
				this.SendPropertyChanging();
				this._NoOfBookRequest = value;
				this.SendPropertyChanged("NoOfBookRequest");
				this.OnNoOfBookRequestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCategory_BookRequest", Storage="_BookCategory", ThisKey="BookCategoryID", OtherKey="BookCategoryID", IsForeignKey=true)]
	public BookCategory BookCategory
	{
		get
		{
			return this._BookCategory.Entity;
		}
		set
		{
			BookCategory previousValue = this._BookCategory.Entity;
			if (((previousValue != value) 
						|| (this._BookCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookCategory.Entity = null;
					previousValue.BookRequests.Remove(this);
				}
				this._BookCategory.Entity = value;
				if ((value != null))
				{
					value.BookRequests.Add(this);
					this._BookCategoryID = value.BookCategoryID;
				}
				else
				{
					this._BookCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("BookCategory");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookRequest", Storage="_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.BookRequests.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.BookRequests.Add(this);
					this._BookID = value.BookID;
				}
				else
				{
					this._BookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookReturn")]
public partial class BookReturn : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookReturnID;
	
	private System.Nullable<int> _BookID;
	
	private System.Nullable<int> _LibUserID;
	
	private string _Comments;
	
	private System.Nullable<int> _LoanBookID;
	
	private string _ReturnDate;
	
	private string _RetStatus;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<LoanBook> _LoanBook;
	
	private EntityRef<LibUser> _LibUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookReturnIDChanging(int value);
    partial void OnBookReturnIDChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnLibUserIDChanging(System.Nullable<int> value);
    partial void OnLibUserIDChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnLoanBookIDChanging(System.Nullable<int> value);
    partial void OnLoanBookIDChanged();
    partial void OnReturnDateChanging(string value);
    partial void OnReturnDateChanged();
    partial void OnRetStatusChanging(string value);
    partial void OnRetStatusChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public BookReturn()
	{
		this._Book = default(EntityRef<Book>);
		this._LoanBook = default(EntityRef<LoanBook>);
		this._LibUser = default(EntityRef<LibUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookReturnID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookReturnID
	{
		get
		{
			return this._BookReturnID;
		}
		set
		{
			if ((this._BookReturnID != value))
			{
				this.OnBookReturnIDChanging(value);
				this.SendPropertyChanging();
				this._BookReturnID = value;
				this.SendPropertyChanged("BookReturnID");
				this.OnBookReturnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
	public System.Nullable<int> BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibUserID", DbType="Int")]
	public System.Nullable<int> LibUserID
	{
		get
		{
			return this._LibUserID;
		}
		set
		{
			if ((this._LibUserID != value))
			{
				if (this._LibUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLibUserIDChanging(value);
				this.SendPropertyChanging();
				this._LibUserID = value;
				this.SendPropertyChanged("LibUserID");
				this.OnLibUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(50)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanBookID", DbType="Int")]
	public System.Nullable<int> LoanBookID
	{
		get
		{
			return this._LoanBookID;
		}
		set
		{
			if ((this._LoanBookID != value))
			{
				if (this._LoanBook.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLoanBookIDChanging(value);
				this.SendPropertyChanging();
				this._LoanBookID = value;
				this.SendPropertyChanged("LoanBookID");
				this.OnLoanBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="VarChar(50)")]
	public string ReturnDate
	{
		get
		{
			return this._ReturnDate;
		}
		set
		{
			if ((this._ReturnDate != value))
			{
				this.OnReturnDateChanging(value);
				this.SendPropertyChanging();
				this._ReturnDate = value;
				this.SendPropertyChanged("ReturnDate");
				this.OnReturnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetStatus", DbType="VarChar(50)")]
	public string RetStatus
	{
		get
		{
			return this._RetStatus;
		}
		set
		{
			if ((this._RetStatus != value))
			{
				this.OnRetStatusChanging(value);
				this.SendPropertyChanging();
				this._RetStatus = value;
				this.SendPropertyChanged("RetStatus");
				this.OnRetStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookReturn", Storage="_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.BookReturns.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.BookReturns.Add(this);
					this._BookID = value.BookID;
				}
				else
				{
					this._BookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanBook_BookReturn", Storage="_LoanBook", ThisKey="LoanBookID", OtherKey="LoanBookID", IsForeignKey=true)]
	public LoanBook LoanBook
	{
		get
		{
			return this._LoanBook.Entity;
		}
		set
		{
			LoanBook previousValue = this._LoanBook.Entity;
			if (((previousValue != value) 
						|| (this._LoanBook.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LoanBook.Entity = null;
					previousValue.BookReturns.Remove(this);
				}
				this._LoanBook.Entity = value;
				if ((value != null))
				{
					value.BookReturns.Add(this);
					this._LoanBookID = value.LoanBookID;
				}
				else
				{
					this._LoanBookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("LoanBook");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibUser_BookReturn", Storage="_LibUser", ThisKey="LibUserID", OtherKey="LibUserID", IsForeignKey=true)]
	public LibUser LibUser
	{
		get
		{
			return this._LibUser.Entity;
		}
		set
		{
			LibUser previousValue = this._LibUser.Entity;
			if (((previousValue != value) 
						|| (this._LibUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LibUser.Entity = null;
					previousValue.BookReturns.Remove(this);
				}
				this._LibUser.Entity = value;
				if ((value != null))
				{
					value.BookReturns.Add(this);
					this._LibUserID = value.LibUserID;
				}
				else
				{
					this._LibUserID = default(Nullable<int>);
				}
				this.SendPropertyChanged("LibUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookShelf")]
public partial class BookShelf : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookShelfID;
	
	private string _BkShelfName;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private System.Nullable<int> _ShelfCategoryID;
	
	private EntityRef<ShelfCategory> _ShelfCategory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookShelfIDChanging(int value);
    partial void OnBookShelfIDChanged();
    partial void OnBkShelfNameChanging(string value);
    partial void OnBkShelfNameChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnShelfCategoryIDChanging(System.Nullable<int> value);
    partial void OnShelfCategoryIDChanged();
    #endregion
	
	public BookShelf()
	{
		this._ShelfCategory = default(EntityRef<ShelfCategory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookShelfID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookShelfID
	{
		get
		{
			return this._BookShelfID;
		}
		set
		{
			if ((this._BookShelfID != value))
			{
				this.OnBookShelfIDChanging(value);
				this.SendPropertyChanging();
				this._BookShelfID = value;
				this.SendPropertyChanged("BookShelfID");
				this.OnBookShelfIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BkShelfName", DbType="VarChar(100)")]
	public string BkShelfName
	{
		get
		{
			return this._BkShelfName;
		}
		set
		{
			if ((this._BkShelfName != value))
			{
				this.OnBkShelfNameChanging(value);
				this.SendPropertyChanging();
				this._BkShelfName = value;
				this.SendPropertyChanged("BkShelfName");
				this.OnBkShelfNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfCategoryID", DbType="Int")]
	public System.Nullable<int> ShelfCategoryID
	{
		get
		{
			return this._ShelfCategoryID;
		}
		set
		{
			if ((this._ShelfCategoryID != value))
			{
				if (this._ShelfCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnShelfCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ShelfCategoryID = value;
				this.SendPropertyChanged("ShelfCategoryID");
				this.OnShelfCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShelfCategory_BookShelf", Storage="_ShelfCategory", ThisKey="ShelfCategoryID", OtherKey="ShelfCategoryID", IsForeignKey=true)]
	public ShelfCategory ShelfCategory
	{
		get
		{
			return this._ShelfCategory.Entity;
		}
		set
		{
			ShelfCategory previousValue = this._ShelfCategory.Entity;
			if (((previousValue != value) 
						|| (this._ShelfCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ShelfCategory.Entity = null;
					previousValue.BookShelfs.Remove(this);
				}
				this._ShelfCategory.Entity = value;
				if ((value != null))
				{
					value.BookShelfs.Add(this);
					this._ShelfCategoryID = value.ShelfCategoryID;
				}
				else
				{
					this._ShelfCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ShelfCategory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookVendor")]
public partial class BookVendor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BookVendorID;
	
	private string _Email;
	
	private string _VendName;
	
	private string _VendAddress;
	
	private string _PhoneNo;
	
	private System.Nullable<int> _BookID;
	
	private System.Nullable<int> _NoOfBookSupplied;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<BookPurchase> _BookPurchases;
	
	private EntityRef<Book> _Book;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookVendorIDChanging(int value);
    partial void OnBookVendorIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnVendNameChanging(string value);
    partial void OnVendNameChanged();
    partial void OnVendAddressChanging(string value);
    partial void OnVendAddressChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnNoOfBookSuppliedChanging(System.Nullable<int> value);
    partial void OnNoOfBookSuppliedChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public BookVendor()
	{
		this._BookPurchases = new EntitySet<BookPurchase>(new Action<BookPurchase>(this.attach_BookPurchases), new Action<BookPurchase>(this.detach_BookPurchases));
		this._Book = default(EntityRef<Book>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookVendorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BookVendorID
	{
		get
		{
			return this._BookVendorID;
		}
		set
		{
			if ((this._BookVendorID != value))
			{
				this.OnBookVendorIDChanging(value);
				this.SendPropertyChanging();
				this._BookVendorID = value;
				this.SendPropertyChanged("BookVendorID");
				this.OnBookVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendName", DbType="VarChar(50)")]
	public string VendName
	{
		get
		{
			return this._VendName;
		}
		set
		{
			if ((this._VendName != value))
			{
				this.OnVendNameChanging(value);
				this.SendPropertyChanging();
				this._VendName = value;
				this.SendPropertyChanged("VendName");
				this.OnVendNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendAddress", DbType="VarChar(50)")]
	public string VendAddress
	{
		get
		{
			return this._VendAddress;
		}
		set
		{
			if ((this._VendAddress != value))
			{
				this.OnVendAddressChanging(value);
				this.SendPropertyChanging();
				this._VendAddress = value;
				this.SendPropertyChanged("VendAddress");
				this.OnVendAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(50)")]
	public string PhoneNo
	{
		get
		{
			return this._PhoneNo;
		}
		set
		{
			if ((this._PhoneNo != value))
			{
				this.OnPhoneNoChanging(value);
				this.SendPropertyChanging();
				this._PhoneNo = value;
				this.SendPropertyChanged("PhoneNo");
				this.OnPhoneNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
	public System.Nullable<int> BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBookSupplied", DbType="Int")]
	public System.Nullable<int> NoOfBookSupplied
	{
		get
		{
			return this._NoOfBookSupplied;
		}
		set
		{
			if ((this._NoOfBookSupplied != value))
			{
				this.OnNoOfBookSuppliedChanging(value);
				this.SendPropertyChanging();
				this._NoOfBookSupplied = value;
				this.SendPropertyChanged("NoOfBookSupplied");
				this.OnNoOfBookSuppliedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookVendor_BookPurchase", Storage="_BookPurchases", ThisKey="BookVendorID", OtherKey="BookVendorID")]
	public EntitySet<BookPurchase> BookPurchases
	{
		get
		{
			return this._BookPurchases;
		}
		set
		{
			this._BookPurchases.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BookVendor", Storage="_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.BookVendors.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.BookVendors.Add(this);
					this._BookID = value.BookID;
				}
				else
				{
					this._BookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookPurchases(BookPurchase entity)
	{
		this.SendPropertyChanging();
		entity.BookVendor = this;
	}
	
	private void detach_BookPurchases(BookPurchase entity)
	{
		this.SendPropertyChanging();
		entity.BookVendor = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserID;
	
	private string _DeptName;
	
	private EntitySet<LibUser> _LibUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    #endregion
	
	public Department()
	{
		this._LibUsers = new EntitySet<LibUser>(new Action<LibUser>(this.attach_LibUsers), new Action<LibUser>(this.detach_LibUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="VarChar(100)")]
	public string DeptName
	{
		get
		{
			return this._DeptName;
		}
		set
		{
			if ((this._DeptName != value))
			{
				this.OnDeptNameChanging(value);
				this.SendPropertyChanging();
				this._DeptName = value;
				this.SendPropertyChanged("DeptName");
				this.OnDeptNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_LibUser", Storage="_LibUsers", ThisKey="UserID", OtherKey="DepartmentID")]
	public EntitySet<LibUser> LibUsers
	{
		get
		{
			return this._LibUsers;
		}
		set
		{
			this._LibUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LibUsers(LibUser entity)
	{
		this.SendPropertyChanging();
		entity.Department = this;
	}
	
	private void detach_LibUsers(LibUser entity)
	{
		this.SendPropertyChanging();
		entity.Department = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemCategory")]
public partial class ItemCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ItemCategoryID;
	
	private string _ItemCategoryDescription;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<OtherItem> _OtherItems;
	
	private EntitySet<OtherItemsPurchase> _OtherItemsPurchases;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCategoryIDChanging(int value);
    partial void OnItemCategoryIDChanged();
    partial void OnItemCategoryDescriptionChanging(string value);
    partial void OnItemCategoryDescriptionChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public ItemCategory()
	{
		this._OtherItems = new EntitySet<OtherItem>(new Action<OtherItem>(this.attach_OtherItems), new Action<OtherItem>(this.detach_OtherItems));
		this._OtherItemsPurchases = new EntitySet<OtherItemsPurchase>(new Action<OtherItemsPurchase>(this.attach_OtherItemsPurchases), new Action<OtherItemsPurchase>(this.detach_OtherItemsPurchases));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ItemCategoryID
	{
		get
		{
			return this._ItemCategoryID;
		}
		set
		{
			if ((this._ItemCategoryID != value))
			{
				this.OnItemCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ItemCategoryID = value;
				this.SendPropertyChanged("ItemCategoryID");
				this.OnItemCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryDescription", DbType="VarChar(100)")]
	public string ItemCategoryDescription
	{
		get
		{
			return this._ItemCategoryDescription;
		}
		set
		{
			if ((this._ItemCategoryDescription != value))
			{
				this.OnItemCategoryDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ItemCategoryDescription = value;
				this.SendPropertyChanged("ItemCategoryDescription");
				this.OnItemCategoryDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_OtherItem", Storage="_OtherItems", ThisKey="ItemCategoryID", OtherKey="ItemCategoryID")]
	public EntitySet<OtherItem> OtherItems
	{
		get
		{
			return this._OtherItems;
		}
		set
		{
			this._OtherItems.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_OtherItemsPurchase", Storage="_OtherItemsPurchases", ThisKey="ItemCategoryID", OtherKey="ItemCategoryID")]
	public EntitySet<OtherItemsPurchase> OtherItemsPurchases
	{
		get
		{
			return this._OtherItemsPurchases;
		}
		set
		{
			this._OtherItemsPurchases.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OtherItems(OtherItem entity)
	{
		this.SendPropertyChanging();
		entity.ItemCategory = this;
	}
	
	private void detach_OtherItems(OtherItem entity)
	{
		this.SendPropertyChanging();
		entity.ItemCategory = null;
	}
	
	private void attach_OtherItemsPurchases(OtherItemsPurchase entity)
	{
		this.SendPropertyChanging();
		entity.ItemCategory = this;
	}
	
	private void detach_OtherItemsPurchases(OtherItemsPurchase entity)
	{
		this.SendPropertyChanging();
		entity.ItemCategory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Library")]
public partial class Library : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LibraryID;
	
	private string _Email;
	
	private string _LibraryName;
	
	private string _Address;
	
	private string _PhoneNo;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLibraryIDChanging(int value);
    partial void OnLibraryIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLibraryNameChanging(string value);
    partial void OnLibraryNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public Library()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LibraryID
	{
		get
		{
			return this._LibraryID;
		}
		set
		{
			if ((this._LibraryID != value))
			{
				this.OnLibraryIDChanging(value);
				this.SendPropertyChanging();
				this._LibraryID = value;
				this.SendPropertyChanged("LibraryID");
				this.OnLibraryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryName", DbType="VarChar(50)")]
	public string LibraryName
	{
		get
		{
			return this._LibraryName;
		}
		set
		{
			if ((this._LibraryName != value))
			{
				this.OnLibraryNameChanging(value);
				this.SendPropertyChanging();
				this._LibraryName = value;
				this.SendPropertyChanged("LibraryName");
				this.OnLibraryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(50)")]
	public string PhoneNo
	{
		get
		{
			return this._PhoneNo;
		}
		set
		{
			if ((this._PhoneNo != value))
			{
				this.OnPhoneNoChanging(value);
				this.SendPropertyChanging();
				this._PhoneNo = value;
				this.SendPropertyChanged("PhoneNo");
				this.OnPhoneNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibraryNews")]
public partial class LibraryNew : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LibraryNewsID;
	
	private string _NewsTitle;
	
	private int _NewsDate;
	
	private string _Author;
	
	private string _Details;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLibraryNewsIDChanging(int value);
    partial void OnLibraryNewsIDChanged();
    partial void OnNewsTitleChanging(string value);
    partial void OnNewsTitleChanged();
    partial void OnNewsDateChanging(int value);
    partial void OnNewsDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public LibraryNew()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryNewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LibraryNewsID
	{
		get
		{
			return this._LibraryNewsID;
		}
		set
		{
			if ((this._LibraryNewsID != value))
			{
				this.OnLibraryNewsIDChanging(value);
				this.SendPropertyChanging();
				this._LibraryNewsID = value;
				this.SendPropertyChanged("LibraryNewsID");
				this.OnLibraryNewsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTitle", DbType="VarChar(50)")]
	public string NewsTitle
	{
		get
		{
			return this._NewsTitle;
		}
		set
		{
			if ((this._NewsTitle != value))
			{
				this.OnNewsTitleChanging(value);
				this.SendPropertyChanging();
				this._NewsTitle = value;
				this.SendPropertyChanged("NewsTitle");
				this.OnNewsTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsDate", DbType="Int NOT NULL")]
	public int NewsDate
	{
		get
		{
			return this._NewsDate;
		}
		set
		{
			if ((this._NewsDate != value))
			{
				this.OnNewsDateChanging(value);
				this.SendPropertyChanging();
				this._NewsDate = value;
				this.SendPropertyChanged("NewsDate");
				this.OnNewsDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(50)")]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(100)")]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibraryStudentClerance")]
public partial class LibraryStudentClerance : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LibraryStudedntCleranceID;
	
	private System.Nullable<int> _MatriculationNumber;
	
	private string _Status;
	
	private string _ClearedDate;
	
	private string _Details;
	
	private string _Comments;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntityRef<LibUser> _LibUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLibraryStudedntCleranceIDChanging(int value);
    partial void OnLibraryStudedntCleranceIDChanged();
    partial void OnMatriculationNumberChanging(System.Nullable<int> value);
    partial void OnMatriculationNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnClearedDateChanging(string value);
    partial void OnClearedDateChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public LibraryStudentClerance()
	{
		this._LibUser = default(EntityRef<LibUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryStudedntCleranceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LibraryStudedntCleranceID
	{
		get
		{
			return this._LibraryStudedntCleranceID;
		}
		set
		{
			if ((this._LibraryStudedntCleranceID != value))
			{
				this.OnLibraryStudedntCleranceIDChanging(value);
				this.SendPropertyChanging();
				this._LibraryStudedntCleranceID = value;
				this.SendPropertyChanged("LibraryStudedntCleranceID");
				this.OnLibraryStudedntCleranceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatriculationNumber", DbType="Int")]
	public System.Nullable<int> MatriculationNumber
	{
		get
		{
			return this._MatriculationNumber;
		}
		set
		{
			if ((this._MatriculationNumber != value))
			{
				if (this._LibUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMatriculationNumberChanging(value);
				this.SendPropertyChanging();
				this._MatriculationNumber = value;
				this.SendPropertyChanged("MatriculationNumber");
				this.OnMatriculationNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(100)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClearedDate", DbType="VarChar(50)")]
	public string ClearedDate
	{
		get
		{
			return this._ClearedDate;
		}
		set
		{
			if ((this._ClearedDate != value))
			{
				this.OnClearedDateChanging(value);
				this.SendPropertyChanging();
				this._ClearedDate = value;
				this.SendPropertyChanged("ClearedDate");
				this.OnClearedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(50)")]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(50)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibUser_LibraryStudentClerance", Storage="_LibUser", ThisKey="MatriculationNumber", OtherKey="LibUserID", IsForeignKey=true)]
	public LibUser LibUser
	{
		get
		{
			return this._LibUser.Entity;
		}
		set
		{
			LibUser previousValue = this._LibUser.Entity;
			if (((previousValue != value) 
						|| (this._LibUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LibUser.Entity = null;
					previousValue.LibraryStudentClerances.Remove(this);
				}
				this._LibUser.Entity = value;
				if ((value != null))
				{
					value.LibraryStudentClerances.Add(this);
					this._MatriculationNumber = value.LibUserID;
				}
				else
				{
					this._MatriculationNumber = default(Nullable<int>);
				}
				this.SendPropertyChanged("LibUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanBook")]
public partial class LoanBook : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LoanBookID;
	
	private System.Nullable<int> _BookID;
	
	private System.Nullable<int> _LibUserID;
	
	private string _BkStatus;
	
	private int _Fine;
	
	private string _LoanDate;
	
	private string _ReturnDate;
	
	private string _DueDate;
	
	private string _Approvedby;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<BookReturn> _BookReturns;
	
	private EntitySet<LoanPenalty> _LoanPenalties;
	
	private EntityRef<Book> _Book;
	
	private EntityRef<LibUser> _LibUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanBookIDChanging(int value);
    partial void OnLoanBookIDChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnLibUserIDChanging(System.Nullable<int> value);
    partial void OnLibUserIDChanged();
    partial void OnBkStatusChanging(string value);
    partial void OnBkStatusChanged();
    partial void OnFineChanging(int value);
    partial void OnFineChanged();
    partial void OnLoanDateChanging(string value);
    partial void OnLoanDateChanged();
    partial void OnReturnDateChanging(string value);
    partial void OnReturnDateChanged();
    partial void OnDueDateChanging(string value);
    partial void OnDueDateChanged();
    partial void OnApprovedbyChanging(string value);
    partial void OnApprovedbyChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public LoanBook()
	{
		this._BookReturns = new EntitySet<BookReturn>(new Action<BookReturn>(this.attach_BookReturns), new Action<BookReturn>(this.detach_BookReturns));
		this._LoanPenalties = new EntitySet<LoanPenalty>(new Action<LoanPenalty>(this.attach_LoanPenalties), new Action<LoanPenalty>(this.detach_LoanPenalties));
		this._Book = default(EntityRef<Book>);
		this._LibUser = default(EntityRef<LibUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanBookID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LoanBookID
	{
		get
		{
			return this._LoanBookID;
		}
		set
		{
			if ((this._LoanBookID != value))
			{
				this.OnLoanBookIDChanging(value);
				this.SendPropertyChanging();
				this._LoanBookID = value;
				this.SendPropertyChanged("LoanBookID");
				this.OnLoanBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
	public System.Nullable<int> BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._Book.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibUserID", DbType="Int")]
	public System.Nullable<int> LibUserID
	{
		get
		{
			return this._LibUserID;
		}
		set
		{
			if ((this._LibUserID != value))
			{
				if (this._LibUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLibUserIDChanging(value);
				this.SendPropertyChanging();
				this._LibUserID = value;
				this.SendPropertyChanged("LibUserID");
				this.OnLibUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BkStatus", DbType="VarChar(50)")]
	public string BkStatus
	{
		get
		{
			return this._BkStatus;
		}
		set
		{
			if ((this._BkStatus != value))
			{
				this.OnBkStatusChanging(value);
				this.SendPropertyChanging();
				this._BkStatus = value;
				this.SendPropertyChanged("BkStatus");
				this.OnBkStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fine", DbType="Int NOT NULL")]
	public int Fine
	{
		get
		{
			return this._Fine;
		}
		set
		{
			if ((this._Fine != value))
			{
				this.OnFineChanging(value);
				this.SendPropertyChanging();
				this._Fine = value;
				this.SendPropertyChanged("Fine");
				this.OnFineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDate", DbType="VarChar(50)")]
	public string LoanDate
	{
		get
		{
			return this._LoanDate;
		}
		set
		{
			if ((this._LoanDate != value))
			{
				this.OnLoanDateChanging(value);
				this.SendPropertyChanging();
				this._LoanDate = value;
				this.SendPropertyChanged("LoanDate");
				this.OnLoanDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="VarChar(50)")]
	public string ReturnDate
	{
		get
		{
			return this._ReturnDate;
		}
		set
		{
			if ((this._ReturnDate != value))
			{
				this.OnReturnDateChanging(value);
				this.SendPropertyChanging();
				this._ReturnDate = value;
				this.SendPropertyChanged("ReturnDate");
				this.OnReturnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="VarChar(50)")]
	public string DueDate
	{
		get
		{
			return this._DueDate;
		}
		set
		{
			if ((this._DueDate != value))
			{
				this.OnDueDateChanging(value);
				this.SendPropertyChanging();
				this._DueDate = value;
				this.SendPropertyChanged("DueDate");
				this.OnDueDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approvedby", DbType="VarChar(50)")]
	public string Approvedby
	{
		get
		{
			return this._Approvedby;
		}
		set
		{
			if ((this._Approvedby != value))
			{
				this.OnApprovedbyChanging(value);
				this.SendPropertyChanging();
				this._Approvedby = value;
				this.SendPropertyChanged("Approvedby");
				this.OnApprovedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanBook_BookReturn", Storage="_BookReturns", ThisKey="LoanBookID", OtherKey="LoanBookID")]
	public EntitySet<BookReturn> BookReturns
	{
		get
		{
			return this._BookReturns;
		}
		set
		{
			this._BookReturns.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanBook_LoanPenalty", Storage="_LoanPenalties", ThisKey="LoanBookID", OtherKey="LoanBookID")]
	public EntitySet<LoanPenalty> LoanPenalties
	{
		get
		{
			return this._LoanPenalties;
		}
		set
		{
			this._LoanPenalties.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_LoanBook", Storage="_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
	public Book Book
	{
		get
		{
			return this._Book.Entity;
		}
		set
		{
			Book previousValue = this._Book.Entity;
			if (((previousValue != value) 
						|| (this._Book.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Book.Entity = null;
					previousValue.LoanBooks.Remove(this);
				}
				this._Book.Entity = value;
				if ((value != null))
				{
					value.LoanBooks.Add(this);
					this._BookID = value.BookID;
				}
				else
				{
					this._BookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Book");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibUser_LoanBook", Storage="_LibUser", ThisKey="LibUserID", OtherKey="LibUserID", IsForeignKey=true)]
	public LibUser LibUser
	{
		get
		{
			return this._LibUser.Entity;
		}
		set
		{
			LibUser previousValue = this._LibUser.Entity;
			if (((previousValue != value) 
						|| (this._LibUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LibUser.Entity = null;
					previousValue.LoanBooks.Remove(this);
				}
				this._LibUser.Entity = value;
				if ((value != null))
				{
					value.LoanBooks.Add(this);
					this._LibUserID = value.LibUserID;
				}
				else
				{
					this._LibUserID = default(Nullable<int>);
				}
				this.SendPropertyChanged("LibUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookReturns(BookReturn entity)
	{
		this.SendPropertyChanging();
		entity.LoanBook = this;
	}
	
	private void detach_BookReturns(BookReturn entity)
	{
		this.SendPropertyChanging();
		entity.LoanBook = null;
	}
	
	private void attach_LoanPenalties(LoanPenalty entity)
	{
		this.SendPropertyChanging();
		entity.LoanBook = this;
	}
	
	private void detach_LoanPenalties(LoanPenalty entity)
	{
		this.SendPropertyChanging();
		entity.LoanBook = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanPenalty")]
public partial class LoanPenalty : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LoanPenaltyID;
	
	private System.Nullable<int> _LoanBookID;
	
	private string _PenStatus;
	
	private string _LoanPenaltyDate;
	
	private int _TotalFine;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntityRef<LoanBook> _LoanBook;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanPenaltyIDChanging(int value);
    partial void OnLoanPenaltyIDChanged();
    partial void OnLoanBookIDChanging(System.Nullable<int> value);
    partial void OnLoanBookIDChanged();
    partial void OnPenStatusChanging(string value);
    partial void OnPenStatusChanged();
    partial void OnLoanPenaltyDateChanging(string value);
    partial void OnLoanPenaltyDateChanged();
    partial void OnTotalFineChanging(int value);
    partial void OnTotalFineChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public LoanPenalty()
	{
		this._LoanBook = default(EntityRef<LoanBook>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPenaltyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LoanPenaltyID
	{
		get
		{
			return this._LoanPenaltyID;
		}
		set
		{
			if ((this._LoanPenaltyID != value))
			{
				this.OnLoanPenaltyIDChanging(value);
				this.SendPropertyChanging();
				this._LoanPenaltyID = value;
				this.SendPropertyChanged("LoanPenaltyID");
				this.OnLoanPenaltyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanBookID", DbType="Int")]
	public System.Nullable<int> LoanBookID
	{
		get
		{
			return this._LoanBookID;
		}
		set
		{
			if ((this._LoanBookID != value))
			{
				if (this._LoanBook.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLoanBookIDChanging(value);
				this.SendPropertyChanging();
				this._LoanBookID = value;
				this.SendPropertyChanged("LoanBookID");
				this.OnLoanBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenStatus", DbType="VarChar(50)")]
	public string PenStatus
	{
		get
		{
			return this._PenStatus;
		}
		set
		{
			if ((this._PenStatus != value))
			{
				this.OnPenStatusChanging(value);
				this.SendPropertyChanging();
				this._PenStatus = value;
				this.SendPropertyChanged("PenStatus");
				this.OnPenStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPenaltyDate", DbType="VarChar(50)")]
	public string LoanPenaltyDate
	{
		get
		{
			return this._LoanPenaltyDate;
		}
		set
		{
			if ((this._LoanPenaltyDate != value))
			{
				this.OnLoanPenaltyDateChanging(value);
				this.SendPropertyChanging();
				this._LoanPenaltyDate = value;
				this.SendPropertyChanged("LoanPenaltyDate");
				this.OnLoanPenaltyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFine", DbType="Int NOT NULL")]
	public int TotalFine
	{
		get
		{
			return this._TotalFine;
		}
		set
		{
			if ((this._TotalFine != value))
			{
				this.OnTotalFineChanging(value);
				this.SendPropertyChanging();
				this._TotalFine = value;
				this.SendPropertyChanged("TotalFine");
				this.OnTotalFineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanBook_LoanPenalty", Storage="_LoanBook", ThisKey="LoanBookID", OtherKey="LoanBookID", IsForeignKey=true)]
	public LoanBook LoanBook
	{
		get
		{
			return this._LoanBook.Entity;
		}
		set
		{
			LoanBook previousValue = this._LoanBook.Entity;
			if (((previousValue != value) 
						|| (this._LoanBook.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LoanBook.Entity = null;
					previousValue.LoanPenalties.Remove(this);
				}
				this._LoanBook.Entity = value;
				if ((value != null))
				{
					value.LoanPenalties.Add(this);
					this._LoanBookID = value.LoanBookID;
				}
				else
				{
					this._LoanBookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("LoanBook");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtherItems")]
public partial class OtherItem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OtherItemsID;
	
	private System.Nullable<int> _ItemCategoryID;
	
	private string _ItemAuthor;
	
	private string _ItemType;
	
	private string _ItemName;
	
	private string _YearPublished;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<OtherItemsPurchase> _OtherItemsPurchases;
	
	private EntityRef<ItemCategory> _ItemCategory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOtherItemsIDChanging(int value);
    partial void OnOtherItemsIDChanged();
    partial void OnItemCategoryIDChanging(System.Nullable<int> value);
    partial void OnItemCategoryIDChanged();
    partial void OnItemAuthorChanging(string value);
    partial void OnItemAuthorChanged();
    partial void OnItemTypeChanging(string value);
    partial void OnItemTypeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnYearPublishedChanging(string value);
    partial void OnYearPublishedChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public OtherItem()
	{
		this._OtherItemsPurchases = new EntitySet<OtherItemsPurchase>(new Action<OtherItemsPurchase>(this.attach_OtherItemsPurchases), new Action<OtherItemsPurchase>(this.detach_OtherItemsPurchases));
		this._ItemCategory = default(EntityRef<ItemCategory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherItemsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OtherItemsID
	{
		get
		{
			return this._OtherItemsID;
		}
		set
		{
			if ((this._OtherItemsID != value))
			{
				this.OnOtherItemsIDChanging(value);
				this.SendPropertyChanging();
				this._OtherItemsID = value;
				this.SendPropertyChanged("OtherItemsID");
				this.OnOtherItemsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryID", DbType="Int")]
	public System.Nullable<int> ItemCategoryID
	{
		get
		{
			return this._ItemCategoryID;
		}
		set
		{
			if ((this._ItemCategoryID != value))
			{
				if (this._ItemCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnItemCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ItemCategoryID = value;
				this.SendPropertyChanged("ItemCategoryID");
				this.OnItemCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemAuthor", DbType="VarChar(50)")]
	public string ItemAuthor
	{
		get
		{
			return this._ItemAuthor;
		}
		set
		{
			if ((this._ItemAuthor != value))
			{
				this.OnItemAuthorChanging(value);
				this.SendPropertyChanging();
				this._ItemAuthor = value;
				this.SendPropertyChanged("ItemAuthor");
				this.OnItemAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="VarChar(50)")]
	public string ItemType
	{
		get
		{
			return this._ItemType;
		}
		set
		{
			if ((this._ItemType != value))
			{
				this.OnItemTypeChanging(value);
				this.SendPropertyChanging();
				this._ItemType = value;
				this.SendPropertyChanged("ItemType");
				this.OnItemTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(100)")]
	public string ItemName
	{
		get
		{
			return this._ItemName;
		}
		set
		{
			if ((this._ItemName != value))
			{
				this.OnItemNameChanging(value);
				this.SendPropertyChanging();
				this._ItemName = value;
				this.SendPropertyChanged("ItemName");
				this.OnItemNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPublished", DbType="VarChar(50)")]
	public string YearPublished
	{
		get
		{
			return this._YearPublished;
		}
		set
		{
			if ((this._YearPublished != value))
			{
				this.OnYearPublishedChanging(value);
				this.SendPropertyChanging();
				this._YearPublished = value;
				this.SendPropertyChanged("YearPublished");
				this.OnYearPublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OtherItem_OtherItemsPurchase", Storage="_OtherItemsPurchases", ThisKey="OtherItemsID", OtherKey="OtherItemsID")]
	public EntitySet<OtherItemsPurchase> OtherItemsPurchases
	{
		get
		{
			return this._OtherItemsPurchases;
		}
		set
		{
			this._OtherItemsPurchases.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_OtherItem", Storage="_ItemCategory", ThisKey="ItemCategoryID", OtherKey="ItemCategoryID", IsForeignKey=true)]
	public ItemCategory ItemCategory
	{
		get
		{
			return this._ItemCategory.Entity;
		}
		set
		{
			ItemCategory previousValue = this._ItemCategory.Entity;
			if (((previousValue != value) 
						|| (this._ItemCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ItemCategory.Entity = null;
					previousValue.OtherItems.Remove(this);
				}
				this._ItemCategory.Entity = value;
				if ((value != null))
				{
					value.OtherItems.Add(this);
					this._ItemCategoryID = value.ItemCategoryID;
				}
				else
				{
					this._ItemCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ItemCategory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OtherItemsPurchases(OtherItemsPurchase entity)
	{
		this.SendPropertyChanging();
		entity.OtherItem = this;
	}
	
	private void detach_OtherItemsPurchases(OtherItemsPurchase entity)
	{
		this.SendPropertyChanging();
		entity.OtherItem = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtherItemsPurchase")]
public partial class OtherItemsPurchase : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OtherItemsPurchaseID;
	
	private System.Nullable<int> _OtherItemsID;
	
	private System.Nullable<int> _ItemCategoryID;
	
	private System.Nullable<int> _ItemPrice;
	
	private System.Nullable<int> _ItemPricePaid;
	
	private System.Nullable<int> _ItemPriceLeft;
	
	private System.Nullable<int> _NoOfItemPurchased;
	
	private string _YearPublished;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntityRef<ItemCategory> _ItemCategory;
	
	private EntityRef<OtherItem> _OtherItem;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOtherItemsPurchaseIDChanging(int value);
    partial void OnOtherItemsPurchaseIDChanged();
    partial void OnOtherItemsIDChanging(System.Nullable<int> value);
    partial void OnOtherItemsIDChanged();
    partial void OnItemCategoryIDChanging(System.Nullable<int> value);
    partial void OnItemCategoryIDChanged();
    partial void OnItemPriceChanging(System.Nullable<int> value);
    partial void OnItemPriceChanged();
    partial void OnItemPricePaidChanging(System.Nullable<int> value);
    partial void OnItemPricePaidChanged();
    partial void OnItemPriceLeftChanging(System.Nullable<int> value);
    partial void OnItemPriceLeftChanged();
    partial void OnNoOfItemPurchasedChanging(System.Nullable<int> value);
    partial void OnNoOfItemPurchasedChanged();
    partial void OnYearPublishedChanging(string value);
    partial void OnYearPublishedChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public OtherItemsPurchase()
	{
		this._ItemCategory = default(EntityRef<ItemCategory>);
		this._OtherItem = default(EntityRef<OtherItem>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherItemsPurchaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OtherItemsPurchaseID
	{
		get
		{
			return this._OtherItemsPurchaseID;
		}
		set
		{
			if ((this._OtherItemsPurchaseID != value))
			{
				this.OnOtherItemsPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._OtherItemsPurchaseID = value;
				this.SendPropertyChanged("OtherItemsPurchaseID");
				this.OnOtherItemsPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherItemsID", DbType="Int")]
	public System.Nullable<int> OtherItemsID
	{
		get
		{
			return this._OtherItemsID;
		}
		set
		{
			if ((this._OtherItemsID != value))
			{
				if (this._OtherItem.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOtherItemsIDChanging(value);
				this.SendPropertyChanging();
				this._OtherItemsID = value;
				this.SendPropertyChanged("OtherItemsID");
				this.OnOtherItemsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryID", DbType="Int")]
	public System.Nullable<int> ItemCategoryID
	{
		get
		{
			return this._ItemCategoryID;
		}
		set
		{
			if ((this._ItemCategoryID != value))
			{
				if (this._ItemCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnItemCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ItemCategoryID = value;
				this.SendPropertyChanged("ItemCategoryID");
				this.OnItemCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Int")]
	public System.Nullable<int> ItemPrice
	{
		get
		{
			return this._ItemPrice;
		}
		set
		{
			if ((this._ItemPrice != value))
			{
				this.OnItemPriceChanging(value);
				this.SendPropertyChanging();
				this._ItemPrice = value;
				this.SendPropertyChanged("ItemPrice");
				this.OnItemPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPricePaid", DbType="Int")]
	public System.Nullable<int> ItemPricePaid
	{
		get
		{
			return this._ItemPricePaid;
		}
		set
		{
			if ((this._ItemPricePaid != value))
			{
				this.OnItemPricePaidChanging(value);
				this.SendPropertyChanging();
				this._ItemPricePaid = value;
				this.SendPropertyChanged("ItemPricePaid");
				this.OnItemPricePaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPriceLeft", DbType="Int")]
	public System.Nullable<int> ItemPriceLeft
	{
		get
		{
			return this._ItemPriceLeft;
		}
		set
		{
			if ((this._ItemPriceLeft != value))
			{
				this.OnItemPriceLeftChanging(value);
				this.SendPropertyChanging();
				this._ItemPriceLeft = value;
				this.SendPropertyChanged("ItemPriceLeft");
				this.OnItemPriceLeftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfItemPurchased", DbType="Int")]
	public System.Nullable<int> NoOfItemPurchased
	{
		get
		{
			return this._NoOfItemPurchased;
		}
		set
		{
			if ((this._NoOfItemPurchased != value))
			{
				this.OnNoOfItemPurchasedChanging(value);
				this.SendPropertyChanging();
				this._NoOfItemPurchased = value;
				this.SendPropertyChanged("NoOfItemPurchased");
				this.OnNoOfItemPurchasedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPublished", DbType="VarChar(50)")]
	public string YearPublished
	{
		get
		{
			return this._YearPublished;
		}
		set
		{
			if ((this._YearPublished != value))
			{
				this.OnYearPublishedChanging(value);
				this.SendPropertyChanging();
				this._YearPublished = value;
				this.SendPropertyChanged("YearPublished");
				this.OnYearPublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_OtherItemsPurchase", Storage="_ItemCategory", ThisKey="ItemCategoryID", OtherKey="ItemCategoryID", IsForeignKey=true)]
	public ItemCategory ItemCategory
	{
		get
		{
			return this._ItemCategory.Entity;
		}
		set
		{
			ItemCategory previousValue = this._ItemCategory.Entity;
			if (((previousValue != value) 
						|| (this._ItemCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ItemCategory.Entity = null;
					previousValue.OtherItemsPurchases.Remove(this);
				}
				this._ItemCategory.Entity = value;
				if ((value != null))
				{
					value.OtherItemsPurchases.Add(this);
					this._ItemCategoryID = value.ItemCategoryID;
				}
				else
				{
					this._ItemCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ItemCategory");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OtherItem_OtherItemsPurchase", Storage="_OtherItem", ThisKey="OtherItemsID", OtherKey="OtherItemsID", IsForeignKey=true)]
	public OtherItem OtherItem
	{
		get
		{
			return this._OtherItem.Entity;
		}
		set
		{
			OtherItem previousValue = this._OtherItem.Entity;
			if (((previousValue != value) 
						|| (this._OtherItem.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._OtherItem.Entity = null;
					previousValue.OtherItemsPurchases.Remove(this);
				}
				this._OtherItem.Entity = value;
				if ((value != null))
				{
					value.OtherItemsPurchases.Add(this);
					this._OtherItemsID = value.OtherItemsID;
				}
				else
				{
					this._OtherItemsID = default(Nullable<int>);
				}
				this.SendPropertyChanged("OtherItem");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publication")]
public partial class Publication : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PublicationID;
	
	private string _PublicationName;
	
	private int _PublicationYear;
	
	private System.Nullable<int> _PublicationAuthor;
	
	private string _PublicationDetails;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublicationIDChanging(int value);
    partial void OnPublicationIDChanged();
    partial void OnPublicationNameChanging(string value);
    partial void OnPublicationNameChanged();
    partial void OnPublicationYearChanging(int value);
    partial void OnPublicationYearChanged();
    partial void OnPublicationAuthorChanging(System.Nullable<int> value);
    partial void OnPublicationAuthorChanged();
    partial void OnPublicationDetailsChanging(string value);
    partial void OnPublicationDetailsChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public Publication()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PublicationID
	{
		get
		{
			return this._PublicationID;
		}
		set
		{
			if ((this._PublicationID != value))
			{
				this.OnPublicationIDChanging(value);
				this.SendPropertyChanging();
				this._PublicationID = value;
				this.SendPropertyChanged("PublicationID");
				this.OnPublicationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationName", DbType="VarChar(50)")]
	public string PublicationName
	{
		get
		{
			return this._PublicationName;
		}
		set
		{
			if ((this._PublicationName != value))
			{
				this.OnPublicationNameChanging(value);
				this.SendPropertyChanging();
				this._PublicationName = value;
				this.SendPropertyChanged("PublicationName");
				this.OnPublicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationYear", DbType="Int NOT NULL")]
	public int PublicationYear
	{
		get
		{
			return this._PublicationYear;
		}
		set
		{
			if ((this._PublicationYear != value))
			{
				this.OnPublicationYearChanging(value);
				this.SendPropertyChanging();
				this._PublicationYear = value;
				this.SendPropertyChanged("PublicationYear");
				this.OnPublicationYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationAuthor", DbType="Int")]
	public System.Nullable<int> PublicationAuthor
	{
		get
		{
			return this._PublicationAuthor;
		}
		set
		{
			if ((this._PublicationAuthor != value))
			{
				this.OnPublicationAuthorChanging(value);
				this.SendPropertyChanging();
				this._PublicationAuthor = value;
				this.SendPropertyChanged("PublicationAuthor");
				this.OnPublicationAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationDetails", DbType="VarChar(100)")]
	public string PublicationDetails
	{
		get
		{
			return this._PublicationDetails;
		}
		set
		{
			if ((this._PublicationDetails != value))
			{
				this.OnPublicationDetailsChanging(value);
				this.SendPropertyChanging();
				this._PublicationDetails = value;
				this.SendPropertyChanged("PublicationDetails");
				this.OnPublicationDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoleID;
	
	private string _RoleName;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<LibUser> _LibUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public Role()
	{
		this._LibUsers = new EntitySet<LibUser>(new Action<LibUser>(this.attach_LibUsers), new Action<LibUser>(this.detach_LibUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(100)")]
	public string RoleName
	{
		get
		{
			return this._RoleName;
		}
		set
		{
			if ((this._RoleName != value))
			{
				this.OnRoleNameChanging(value);
				this.SendPropertyChanging();
				this._RoleName = value;
				this.SendPropertyChanged("RoleName");
				this.OnRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_LibUser", Storage="_LibUsers", ThisKey="RoleID", OtherKey="RoleID")]
	public EntitySet<LibUser> LibUsers
	{
		get
		{
			return this._LibUsers;
		}
		set
		{
			this._LibUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LibUsers(LibUser entity)
	{
		this.SendPropertyChanging();
		entity.Role = this;
	}
	
	private void detach_LibUsers(LibUser entity)
	{
		this.SendPropertyChanging();
		entity.Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SendMessage")]
public partial class SendMessage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SendMessageID;
	
	private string _ReceiverName;
	
	private string _MessageToSend;
	
	private string _Email;
	
	private string _MessageDate;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSendMessageIDChanging(int value);
    partial void OnSendMessageIDChanged();
    partial void OnReceiverNameChanging(string value);
    partial void OnReceiverNameChanged();
    partial void OnMessageToSendChanging(string value);
    partial void OnMessageToSendChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMessageDateChanging(string value);
    partial void OnMessageDateChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public SendMessage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SendMessageID
	{
		get
		{
			return this._SendMessageID;
		}
		set
		{
			if ((this._SendMessageID != value))
			{
				this.OnSendMessageIDChanging(value);
				this.SendPropertyChanging();
				this._SendMessageID = value;
				this.SendPropertyChanged("SendMessageID");
				this.OnSendMessageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverName", DbType="VarChar(50)")]
	public string ReceiverName
	{
		get
		{
			return this._ReceiverName;
		}
		set
		{
			if ((this._ReceiverName != value))
			{
				this.OnReceiverNameChanging(value);
				this.SendPropertyChanging();
				this._ReceiverName = value;
				this.SendPropertyChanged("ReceiverName");
				this.OnReceiverNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageToSend", DbType="VarChar(MAX)")]
	public string MessageToSend
	{
		get
		{
			return this._MessageToSend;
		}
		set
		{
			if ((this._MessageToSend != value))
			{
				this.OnMessageToSendChanging(value);
				this.SendPropertyChanging();
				this._MessageToSend = value;
				this.SendPropertyChanged("MessageToSend");
				this.OnMessageToSendChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageDate", DbType="VarChar(100)")]
	public string MessageDate
	{
		get
		{
			return this._MessageDate;
		}
		set
		{
			if ((this._MessageDate != value))
			{
				this.OnMessageDateChanging(value);
				this.SendPropertyChanging();
				this._MessageDate = value;
				this.SendPropertyChanged("MessageDate");
				this.OnMessageDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShelfCategory")]
public partial class ShelfCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ShelfCategoryID;
	
	private string _Description;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private EntitySet<BookShelf> _BookShelfs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShelfCategoryIDChanging(int value);
    partial void OnShelfCategoryIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public ShelfCategory()
	{
		this._BookShelfs = new EntitySet<BookShelf>(new Action<BookShelf>(this.attach_BookShelfs), new Action<BookShelf>(this.detach_BookShelfs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ShelfCategoryID
	{
		get
		{
			return this._ShelfCategoryID;
		}
		set
		{
			if ((this._ShelfCategoryID != value))
			{
				this.OnShelfCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ShelfCategoryID = value;
				this.SendPropertyChanged("ShelfCategoryID");
				this.OnShelfCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShelfCategory_BookShelf", Storage="_BookShelfs", ThisKey="ShelfCategoryID", OtherKey="ShelfCategoryID")]
	public EntitySet<BookShelf> BookShelfs
	{
		get
		{
			return this._BookShelfs;
		}
		set
		{
			this._BookShelfs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookShelfs(BookShelf entity)
	{
		this.SendPropertyChanging();
		entity.ShelfCategory = this;
	}
	
	private void detach_BookShelfs(BookShelf entity)
	{
		this.SendPropertyChanging();
		entity.ShelfCategory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentProjectTopic")]
public partial class StudentProjectTopic : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StudentProjectTopicID;
	
	private string _ProjectTitle;
	
	private int _ProjectYear;
	
	private System.Nullable<int> _ProjectCategory;
	
	private string _ProjectDetails;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentProjectTopicIDChanging(int value);
    partial void OnStudentProjectTopicIDChanged();
    partial void OnProjectTitleChanging(string value);
    partial void OnProjectTitleChanged();
    partial void OnProjectYearChanging(int value);
    partial void OnProjectYearChanged();
    partial void OnProjectCategoryChanging(System.Nullable<int> value);
    partial void OnProjectCategoryChanged();
    partial void OnProjectDetailsChanging(string value);
    partial void OnProjectDetailsChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public StudentProjectTopic()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentProjectTopicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StudentProjectTopicID
	{
		get
		{
			return this._StudentProjectTopicID;
		}
		set
		{
			if ((this._StudentProjectTopicID != value))
			{
				this.OnStudentProjectTopicIDChanging(value);
				this.SendPropertyChanging();
				this._StudentProjectTopicID = value;
				this.SendPropertyChanged("StudentProjectTopicID");
				this.OnStudentProjectTopicIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="VarChar(50)")]
	public string ProjectTitle
	{
		get
		{
			return this._ProjectTitle;
		}
		set
		{
			if ((this._ProjectTitle != value))
			{
				this.OnProjectTitleChanging(value);
				this.SendPropertyChanging();
				this._ProjectTitle = value;
				this.SendPropertyChanged("ProjectTitle");
				this.OnProjectTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectYear", DbType="Int NOT NULL")]
	public int ProjectYear
	{
		get
		{
			return this._ProjectYear;
		}
		set
		{
			if ((this._ProjectYear != value))
			{
				this.OnProjectYearChanging(value);
				this.SendPropertyChanging();
				this._ProjectYear = value;
				this.SendPropertyChanged("ProjectYear");
				this.OnProjectYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCategory", DbType="Int")]
	public System.Nullable<int> ProjectCategory
	{
		get
		{
			return this._ProjectCategory;
		}
		set
		{
			if ((this._ProjectCategory != value))
			{
				this.OnProjectCategoryChanging(value);
				this.SendPropertyChanging();
				this._ProjectCategory = value;
				this.SendPropertyChanged("ProjectCategory");
				this.OnProjectCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDetails", DbType="VarChar(100)")]
	public string ProjectDetails
	{
		get
		{
			return this._ProjectDetails;
		}
		set
		{
			if ((this._ProjectDetails != value))
			{
				this.OnProjectDetailsChanging(value);
				this.SendPropertyChanging();
				this._ProjectDetails = value;
				this.SendPropertyChanged("ProjectDetails");
				this.OnProjectDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usercategory")]
public partial class usercategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserCategoryID;
	
	private string _UserCategoryName;
	
	private string _CreatedBy;
	
	private string _CreatedDate;
	
	private EntitySet<LibUser> _LibUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCategoryIDChanging(int value);
    partial void OnUserCategoryIDChanged();
    partial void OnUserCategoryNameChanging(string value);
    partial void OnUserCategoryNameChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public usercategory()
	{
		this._LibUsers = new EntitySet<LibUser>(new Action<LibUser>(this.attach_LibUsers), new Action<LibUser>(this.detach_LibUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserCategoryID
	{
		get
		{
			return this._UserCategoryID;
		}
		set
		{
			if ((this._UserCategoryID != value))
			{
				this.OnUserCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._UserCategoryID = value;
				this.SendPropertyChanged("UserCategoryID");
				this.OnUserCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCategoryName", DbType="VarChar(150)")]
	public string UserCategoryName
	{
		get
		{
			return this._UserCategoryName;
		}
		set
		{
			if ((this._UserCategoryName != value))
			{
				this.OnUserCategoryNameChanging(value);
				this.SendPropertyChanging();
				this._UserCategoryName = value;
				this.SendPropertyChanged("UserCategoryName");
				this.OnUserCategoryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
	public string CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usercategory_LibUser", Storage="_LibUsers", ThisKey="UserCategoryID", OtherKey="UserCategoryID")]
	public EntitySet<LibUser> LibUsers
	{
		get
		{
			return this._LibUsers;
		}
		set
		{
			this._LibUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LibUsers(LibUser entity)
	{
		this.SendPropertyChanging();
		entity.usercategory = this;
	}
	
	private void detach_LibUsers(LibUser entity)
	{
		this.SendPropertyChanging();
		entity.usercategory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PastQuestion")]
public partial class PastQuestion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PastQuestionID;
	
	private System.Nullable<int> _PastQuestionCategory;
	
	private string _PastQuestionType;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private string _QuestionDesc;
	
	private string _PastQuestionYear;
	
	private string _PastQuestionDetails;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPastQuestionIDChanging(int value);
    partial void OnPastQuestionIDChanged();
    partial void OnPastQuestionCategoryChanging(System.Nullable<int> value);
    partial void OnPastQuestionCategoryChanged();
    partial void OnPastQuestionTypeChanging(string value);
    partial void OnPastQuestionTypeChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnQuestionDescChanging(string value);
    partial void OnQuestionDescChanged();
    partial void OnPastQuestionYearChanging(string value);
    partial void OnPastQuestionYearChanged();
    partial void OnPastQuestionDetailsChanging(string value);
    partial void OnPastQuestionDetailsChanged();
    #endregion
	
	public PastQuestion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PastQuestionID
	{
		get
		{
			return this._PastQuestionID;
		}
		set
		{
			if ((this._PastQuestionID != value))
			{
				this.OnPastQuestionIDChanging(value);
				this.SendPropertyChanging();
				this._PastQuestionID = value;
				this.SendPropertyChanged("PastQuestionID");
				this.OnPastQuestionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastQuestionCategory", DbType="Int")]
	public System.Nullable<int> PastQuestionCategory
	{
		get
		{
			return this._PastQuestionCategory;
		}
		set
		{
			if ((this._PastQuestionCategory != value))
			{
				this.OnPastQuestionCategoryChanging(value);
				this.SendPropertyChanging();
				this._PastQuestionCategory = value;
				this.SendPropertyChanged("PastQuestionCategory");
				this.OnPastQuestionCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastQuestionType", DbType="VarChar(100)")]
	public string PastQuestionType
	{
		get
		{
			return this._PastQuestionType;
		}
		set
		{
			if ((this._PastQuestionType != value))
			{
				this.OnPastQuestionTypeChanging(value);
				this.SendPropertyChanging();
				this._PastQuestionType = value;
				this.SendPropertyChanged("PastQuestionType");
				this.OnPastQuestionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionDesc", DbType="VarChar(50)")]
	public string QuestionDesc
	{
		get
		{
			return this._QuestionDesc;
		}
		set
		{
			if ((this._QuestionDesc != value))
			{
				this.OnQuestionDescChanging(value);
				this.SendPropertyChanging();
				this._QuestionDesc = value;
				this.SendPropertyChanged("QuestionDesc");
				this.OnQuestionDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastQuestionYear", DbType="VarChar(50)")]
	public string PastQuestionYear
	{
		get
		{
			return this._PastQuestionYear;
		}
		set
		{
			if ((this._PastQuestionYear != value))
			{
				this.OnPastQuestionYearChanging(value);
				this.SendPropertyChanging();
				this._PastQuestionYear = value;
				this.SendPropertyChanged("PastQuestionYear");
				this.OnPastQuestionYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastQuestionDetails", DbType="VarChar(50)")]
	public string PastQuestionDetails
	{
		get
		{
			return this._PastQuestionDetails;
		}
		set
		{
			if ((this._PastQuestionDetails != value))
			{
				this.OnPastQuestionDetailsChanging(value);
				this.SendPropertyChanging();
				this._PastQuestionDetails = value;
				this.SendPropertyChanged("PastQuestionDetails");
				this.OnPastQuestionDetailsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibUser")]
public partial class LibUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LibUserID;
	
	private string _Email;
	
	private string _FirstName;
	
	private string _LastName;
	
	private System.Data.Linq.Binary _Photo;
	
	private string _Gender;
	
	private string _PhoneNumber;
	
	private string _MatriculationNumber;
	
	private string _StaffID;
	
	private System.Nullable<int> _DepartmentID;
	
	private System.Nullable<int> _RoleID;
	
	private string _Passwd;
	
	private string _Createdby;
	
	private string _CreatedDate;
	
	private System.Nullable<int> _UserCategoryID;
	
	private string _RoleNm;
	
	private EntitySet<BookReturn> _BookReturns;
	
	private EntitySet<LibraryStudentClerance> _LibraryStudentClerances;
	
	private EntitySet<LoanBook> _LoanBooks;
	
	private EntityRef<Department> _Department;
	
	private EntityRef<Role> _Role;
	
	private EntityRef<usercategory> _usercategory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLibUserIDChanging(int value);
    partial void OnLibUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnMatriculationNumberChanging(string value);
    partial void OnMatriculationNumberChanged();
    partial void OnStaffIDChanging(string value);
    partial void OnStaffIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnPasswdChanging(string value);
    partial void OnPasswdChanged();
    partial void OnCreatedbyChanging(string value);
    partial void OnCreatedbyChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnUserCategoryIDChanging(System.Nullable<int> value);
    partial void OnUserCategoryIDChanged();
    partial void OnRoleNmChanging(string value);
    partial void OnRoleNmChanged();
    #endregion
	
	public LibUser()
	{
		this._BookReturns = new EntitySet<BookReturn>(new Action<BookReturn>(this.attach_BookReturns), new Action<BookReturn>(this.detach_BookReturns));
		this._LibraryStudentClerances = new EntitySet<LibraryStudentClerance>(new Action<LibraryStudentClerance>(this.attach_LibraryStudentClerances), new Action<LibraryStudentClerance>(this.detach_LibraryStudentClerances));
		this._LoanBooks = new EntitySet<LoanBook>(new Action<LoanBook>(this.attach_LoanBooks), new Action<LoanBook>(this.detach_LoanBooks));
		this._Department = default(EntityRef<Department>);
		this._Role = default(EntityRef<Role>);
		this._usercategory = default(EntityRef<usercategory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LibUserID
	{
		get
		{
			return this._LibUserID;
		}
		set
		{
			if ((this._LibUserID != value))
			{
				this.OnLibUserIDChanging(value);
				this.SendPropertyChanging();
				this._LibUserID = value;
				this.SendPropertyChanged("LibUserID");
				this.OnLibUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this.OnPhotoChanging(value);
				this.SendPropertyChanging();
				this._Photo = value;
				this.SendPropertyChanged("Photo");
				this.OnPhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
	public string PhoneNumber
	{
		get
		{
			return this._PhoneNumber;
		}
		set
		{
			if ((this._PhoneNumber != value))
			{
				this.OnPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumber = value;
				this.SendPropertyChanged("PhoneNumber");
				this.OnPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatriculationNumber", DbType="VarChar(50)")]
	public string MatriculationNumber
	{
		get
		{
			return this._MatriculationNumber;
		}
		set
		{
			if ((this._MatriculationNumber != value))
			{
				this.OnMatriculationNumberChanging(value);
				this.SendPropertyChanging();
				this._MatriculationNumber = value;
				this.SendPropertyChanged("MatriculationNumber");
				this.OnMatriculationNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="VarChar(50)")]
	public string StaffID
	{
		get
		{
			return this._StaffID;
		}
		set
		{
			if ((this._StaffID != value))
			{
				this.OnStaffIDChanging(value);
				this.SendPropertyChanging();
				this._StaffID = value;
				this.SendPropertyChanged("StaffID");
				this.OnStaffIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
	public System.Nullable<int> DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				if (this._Department.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
	public System.Nullable<int> RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				if (this._Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwd", DbType="VarChar(300)")]
	public string Passwd
	{
		get
		{
			return this._Passwd;
		}
		set
		{
			if ((this._Passwd != value))
			{
				this.OnPasswdChanging(value);
				this.SendPropertyChanging();
				this._Passwd = value;
				this.SendPropertyChanged("Passwd");
				this.OnPasswdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="VarChar(50)")]
	public string Createdby
	{
		get
		{
			return this._Createdby;
		}
		set
		{
			if ((this._Createdby != value))
			{
				this.OnCreatedbyChanging(value);
				this.SendPropertyChanging();
				this._Createdby = value;
				this.SendPropertyChanged("Createdby");
				this.OnCreatedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(50)")]
	public string CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCategoryID", DbType="Int")]
	public System.Nullable<int> UserCategoryID
	{
		get
		{
			return this._UserCategoryID;
		}
		set
		{
			if ((this._UserCategoryID != value))
			{
				if (this._usercategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._UserCategoryID = value;
				this.SendPropertyChanged("UserCategoryID");
				this.OnUserCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleNm", DbType="VarChar(50)")]
	public string RoleNm
	{
		get
		{
			return this._RoleNm;
		}
		set
		{
			if ((this._RoleNm != value))
			{
				this.OnRoleNmChanging(value);
				this.SendPropertyChanging();
				this._RoleNm = value;
				this.SendPropertyChanged("RoleNm");
				this.OnRoleNmChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibUser_BookReturn", Storage="_BookReturns", ThisKey="LibUserID", OtherKey="LibUserID")]
	public EntitySet<BookReturn> BookReturns
	{
		get
		{
			return this._BookReturns;
		}
		set
		{
			this._BookReturns.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibUser_LibraryStudentClerance", Storage="_LibraryStudentClerances", ThisKey="LibUserID", OtherKey="MatriculationNumber")]
	public EntitySet<LibraryStudentClerance> LibraryStudentClerances
	{
		get
		{
			return this._LibraryStudentClerances;
		}
		set
		{
			this._LibraryStudentClerances.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LibUser_LoanBook", Storage="_LoanBooks", ThisKey="LibUserID", OtherKey="LibUserID")]
	public EntitySet<LoanBook> LoanBooks
	{
		get
		{
			return this._LoanBooks;
		}
		set
		{
			this._LoanBooks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_LibUser", Storage="_Department", ThisKey="DepartmentID", OtherKey="UserID", IsForeignKey=true)]
	public Department Department
	{
		get
		{
			return this._Department.Entity;
		}
		set
		{
			Department previousValue = this._Department.Entity;
			if (((previousValue != value) 
						|| (this._Department.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Department.Entity = null;
					previousValue.LibUsers.Remove(this);
				}
				this._Department.Entity = value;
				if ((value != null))
				{
					value.LibUsers.Add(this);
					this._DepartmentID = value.UserID;
				}
				else
				{
					this._DepartmentID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Department");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_LibUser", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
	public Role Role
	{
		get
		{
			return this._Role.Entity;
		}
		set
		{
			Role previousValue = this._Role.Entity;
			if (((previousValue != value) 
						|| (this._Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role.Entity = null;
					previousValue.LibUsers.Remove(this);
				}
				this._Role.Entity = value;
				if ((value != null))
				{
					value.LibUsers.Add(this);
					this._RoleID = value.RoleID;
				}
				else
				{
					this._RoleID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usercategory_LibUser", Storage="_usercategory", ThisKey="UserCategoryID", OtherKey="UserCategoryID", IsForeignKey=true)]
	public usercategory usercategory
	{
		get
		{
			return this._usercategory.Entity;
		}
		set
		{
			usercategory previousValue = this._usercategory.Entity;
			if (((previousValue != value) 
						|| (this._usercategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._usercategory.Entity = null;
					previousValue.LibUsers.Remove(this);
				}
				this._usercategory.Entity = value;
				if ((value != null))
				{
					value.LibUsers.Add(this);
					this._UserCategoryID = value.UserCategoryID;
				}
				else
				{
					this._UserCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("usercategory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookReturns(BookReturn entity)
	{
		this.SendPropertyChanging();
		entity.LibUser = this;
	}
	
	private void detach_BookReturns(BookReturn entity)
	{
		this.SendPropertyChanging();
		entity.LibUser = null;
	}
	
	private void attach_LibraryStudentClerances(LibraryStudentClerance entity)
	{
		this.SendPropertyChanging();
		entity.LibUser = this;
	}
	
	private void detach_LibraryStudentClerances(LibraryStudentClerance entity)
	{
		this.SendPropertyChanging();
		entity.LibUser = null;
	}
	
	private void attach_LoanBooks(LoanBook entity)
	{
		this.SendPropertyChanging();
		entity.LibUser = this;
	}
	
	private void detach_LoanBooks(LoanBook entity)
	{
		this.SendPropertyChanging();
		entity.LibUser = null;
	}
}
#pragma warning restore 1591
